{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/GameBoard/index.tsx\",\n  _s = $RefreshSig$();\nimport * as R from \"ramda\";\nimport { BoardLine } from \"../BoardLine\";\nimport styled from \"styled-components\";\nimport { useGameBoardContext } from \"../GameBoardContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledGameBoard = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  column-gap: 1rem;\n`;\n_c = StyledGameBoard;\nexport const GameBoard = () => {\n  _s();\n  const {\n    words\n  } = useGameBoardContext();\n  const boardLines = R.splitEvery(4, words);\n  return /*#__PURE__*/_jsxDEV(StyledGameBoard, {\n    children: boardLines.map((line, i) => /*#__PURE__*/_jsxDEV(BoardLine, {\n      words: line\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoard, \"8Twf94PToPrF8YOLso+5oSr6690=\", false, function () {\n  return [useGameBoardContext];\n});\n_c2 = GameBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledGameBoard\");\n$RefreshReg$(_c2, \"GameBoard\");","map":{"version":3,"names":["R","BoardLine","styled","useGameBoardContext","jsxDEV","_jsxDEV","StyledGameBoard","div","_c","GameBoard","_s","words","boardLines","splitEvery","children","map","line","i","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/GameBoard/index.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport { IGameBoardWord } from \"../types\";\nimport * as R from \"ramda\";\nimport { BoardLine } from \"../BoardLine\";\nimport styled from \"styled-components\";\nimport { useGameBoardContext } from \"../GameBoardContext\";\n\ninterface IProps {}\n\nconst StyledGameBoard = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr) auto;\n  column-gap: 1rem;\n`;\n\nexport const GameBoard: FC<IProps> = () => {\n  const { words } = useGameBoardContext();\n\n  const boardLines = R.splitEvery(4, words);\n\n  return (\n    <StyledGameBoard>\n      {boardLines.map((line, i) => (\n        <BoardLine key={i} words={line} />\n      ))}\n    </StyledGameBoard>\n  );\n};\n"],"mappings":";;AAEA,OAAO,KAAKA,CAAC,MAAM,OAAO;AAC1B,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,mBAAmB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1D,MAAMC,eAAe,GAAGJ,MAAM,CAACK,GAAI;AACnC;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,eAAe;AAMrB,OAAO,MAAMG,SAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAM;IAAEC;EAAM,CAAC,GAAGR,mBAAmB,CAAC,CAAC;EAEvC,MAAMS,UAAU,GAAGZ,CAAC,CAACa,UAAU,CAAC,CAAC,EAAEF,KAAK,CAAC;EAEzC,oBACEN,OAAA,CAACC,eAAe;IAAAQ,QAAA,EACbF,UAAU,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACtBZ,OAAA,CAACJ,SAAS;MAASU,KAAK,EAAEK;IAAK,GAAfC,CAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAEtB,CAAC;AAACX,EAAA,CAZWD,SAAqB;EAAA,QACdN,mBAAmB;AAAA;AAAAmB,GAAA,GAD1Bb,SAAqB;AAAA,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}