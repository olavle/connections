{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/BoardWord/index.tsx\",\n  _s = $RefreshSig$();\nimport styled, { css } from \"styled-components\";\nimport { useGameBoardContext } from \"../GameBoardContext\";\nimport { useGetWindowWidth } from \"../../../hooks/useGetWindowWidth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledBoardWord = styled.div`\n  padding: 3vw;\n  user-select: none;\n  text-align: center;\n  box-shadow: 0 0 0 1px;\n  font-size: 3.5vw;\n\n  ${({\n  $isSelected,\n  $isGuessedCorrect,\n  $isMobile\n}) => css`\n    font-size: ${$isMobile && \"0.9rem\"};\n    background-color: ${() => {\n  if ($isGuessedCorrect) {\n    return \"#1eff00\";\n  }\n  if ($isSelected) {\n    return \"#fffc35\";\n  }\n}};\n  `}\n`;\n_c = StyledBoardWord;\nexport const BoardWord = ({\n  boardWord\n}) => {\n  _s();\n  const {\n    word,\n    isGuessedCorrect\n  } = boardWord;\n  const {\n    toggleWordSelect\n  } = useGameBoardContext();\n  const {\n    isMobile\n  } = useGetWindowWidth();\n  const isSelected = boardWord.isSelected;\n  return /*#__PURE__*/_jsxDEV(StyledBoardWord, {\n    $isSelected: isSelected,\n    $isGuessedCorrect: isGuessedCorrect,\n    $isMobile: isMobile,\n    onClick: () => toggleWordSelect(word),\n    children: word\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(BoardWord, \"eUareRR5s/V5RIUJu6fZvTNBNlo=\", false, function () {\n  return [useGameBoardContext, useGetWindowWidth];\n});\n_c2 = BoardWord;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledBoardWord\");\n$RefreshReg$(_c2, \"BoardWord\");","map":{"version":3,"names":["styled","css","useGameBoardContext","useGetWindowWidth","jsxDEV","_jsxDEV","StyledBoardWord","div","$isSelected","$isGuessedCorrect","$isMobile","_c","BoardWord","boardWord","_s","word","isGuessedCorrect","toggleWordSelect","isMobile","isSelected","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/BoardWord/index.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { IGameBoardWord } from \"../types\";\nimport { useGameBoardContext } from \"../GameBoardContext\";\nimport { useGetWindowWidth } from \"../../../hooks/useGetWindowWidth\";\n\ninterface IProps {\n  boardWord: IGameBoardWord;\n}\n\ninterface IStyledBoardWordProps {\n  $isSelected: boolean;\n  $isGuessedCorrect: boolean | undefined;\n  $isMobile: boolean;\n}\n\nconst StyledBoardWord = styled.div<IStyledBoardWordProps>`\n  padding: 3vw;\n  user-select: none;\n  text-align: center;\n  box-shadow: 0 0 0 1px;\n  font-size: 3.5vw;\n\n  ${({ $isSelected, $isGuessedCorrect, $isMobile }) => css`\n    font-size: ${$isMobile && \"0.9rem\"};\n    background-color: ${() => {\n      if ($isGuessedCorrect) {\n        return \"#1eff00\";\n      }\n      if ($isSelected) {\n        return \"#fffc35\";\n      }\n    }};\n  `}\n`;\n\nexport const BoardWord: FC<IProps> = ({ boardWord }) => {\n  const { word, isGuessedCorrect } = boardWord;\n  const { toggleWordSelect } = useGameBoardContext();\n\n  const { isMobile } = useGetWindowWidth();\n\n  const isSelected = boardWord.isSelected;\n\n  return (\n    <StyledBoardWord\n      $isSelected={isSelected}\n      $isGuessedCorrect={isGuessedCorrect}\n      $isMobile={isMobile}\n      onClick={() => toggleWordSelect(word)}\n    >\n      {word}\n    </StyledBoardWord>\n  );\n};\n"],"mappings":";;AACA,OAAOA,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAE/C,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,iBAAiB,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYrE,MAAMC,eAAe,GAAGN,MAAM,CAACO,GAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;EAAEC,WAAW;EAAEC,iBAAiB;EAAEC;AAAU,CAAC,KAAKT,GAAI;AAC3D,iBAAiBS,SAAS,IAAI,QAAS;AACvC,wBAAwB,MAAM;EACxB,IAAID,iBAAiB,EAAE;IACrB,OAAO,SAAS;EAClB;EACA,IAAID,WAAW,EAAE;IACf,OAAO,SAAS;EAClB;AACF,CAAE;AACN,GAAI;AACJ,CAAC;AAACG,EAAA,GAlBIL,eAAe;AAoBrB,OAAO,MAAMM,SAAqB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM;IAAEC,IAAI;IAAEC;EAAiB,CAAC,GAAGH,SAAS;EAC5C,MAAM;IAAEI;EAAiB,CAAC,GAAGf,mBAAmB,CAAC,CAAC;EAElD,MAAM;IAAEgB;EAAS,CAAC,GAAGf,iBAAiB,CAAC,CAAC;EAExC,MAAMgB,UAAU,GAAGN,SAAS,CAACM,UAAU;EAEvC,oBACEd,OAAA,CAACC,eAAe;IACdE,WAAW,EAAEW,UAAW;IACxBV,iBAAiB,EAAEO,gBAAiB;IACpCN,SAAS,EAAEQ,QAAS;IACpBE,OAAO,EAAEA,CAAA,KAAMH,gBAAgB,CAACF,IAAI,CAAE;IAAAM,QAAA,EAErCN;EAAI;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEtB,CAAC;AAACX,EAAA,CAlBWF,SAAqB;EAAA,QAEHV,mBAAmB,EAE3BC,iBAAiB;AAAA;AAAAuB,GAAA,GAJ3Bd,SAAqB;AAAA,IAAAD,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}