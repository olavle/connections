{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameBoardContext = /*#__PURE__*/createContext(null);\nexport const GameBoardContextProvider = ({\n  children,\n  inputWords\n}) => {\n  _s();\n  const [words, setWords] = useState(inputWords || []);\n  const toggleWordSelect = inputWord => {\n    const selectedWord = words.find(({\n      word\n    }) => word === inputWord);\n    if (!selectedWord) {\n      throw new Error(\"Selected word has to exist\");\n    }\n    const editedWord = {\n      ...selectedWord,\n      isSelected: !selectedWord.isSelected\n    };\n    setWords(words.map(word => {\n      return word.word === selectedWord.word ? editedWord : word;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(GameBoardContext.Provider, {\n    value: {\n      words,\n      setWords,\n      selectWord\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoardContextProvider, \"/ruRz87IU3gnnnTiBK9QsS+G+F8=\");\n_c = GameBoardContextProvider;\nexport const useGameBoardContext = () => {\n  _s2();\n  const context = useContext(GameBoardContext);\n  if (!context) {\n    throw new Error(\"context needs provider\");\n  }\n  return context;\n};\n_s2(useGameBoardContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameBoardContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","GameBoardContext","GameBoardContextProvider","children","inputWords","_s","words","setWords","toggleWordSelect","inputWord","selectedWord","find","word","Error","editedWord","isSelected","map","Provider","value","selectWord","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGameBoardContext","_s2","context","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx"],"sourcesContent":["import { ReactNode, createContext, useContext, useState } from \"react\";\nimport { IGameBoardWord } from \"../types\";\nimport * as R from \"ramda\";\n\ninterface IContext {\n  words: IGameBoardWord[];\n  setWords: React.Dispatch<React.SetStateAction<IGameBoardWord[]>>;\n  selectWord: (word: string) => void;\n}\n\nexport const GameBoardContext = createContext<IContext | null>(null);\n\nexport const GameBoardContextProvider = ({\n  children,\n  inputWords,\n}: {\n  children: ReactNode;\n  inputWords: IGameBoardWord[] | null;\n}) => {\n  const [words, setWords] = useState<IGameBoardWord[]>(inputWords || []);\n\n  const toggleWordSelect = (inputWord: string) => {\n    const selectedWord = words.find(({ word }) => word === inputWord);\n    if (!selectedWord) {\n      throw new Error(\"Selected word has to exist\");\n    }\n\n    const editedWord: IGameBoardWord = {\n      ...selectedWord,\n      isSelected: !selectedWord.isSelected,\n    };\n\n    setWords(\n      words.map((word) => {\n        return word.word === selectedWord.word ? editedWord : word;\n      })\n    );\n  };\n\n  return (\n    <GameBoardContext.Provider\n      value={{\n        words,\n        setWords,\n        selectWord,\n      }}\n    >\n      {children}\n    </GameBoardContext.Provider>\n  );\n};\n\nexport const useGameBoardContext = () => {\n  const context = useContext(GameBoardContext);\n\n  if (!context) {\n    throw new Error(\"context needs provider\");\n  }\n\n  return context;\n};\n"],"mappings":";;;AAAA,SAAoBA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUvE,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAkB,IAAI,CAAC;AAEpE,OAAO,MAAMM,wBAAwB,GAAGA,CAAC;EACvCC,QAAQ;EACRC;AAIF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAmBM,UAAU,IAAI,EAAE,CAAC;EAEtE,MAAMI,gBAAgB,GAAIC,SAAiB,IAAK;IAC9C,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAKA,IAAI,KAAKH,SAAS,CAAC;IACjE,IAAI,CAACC,YAAY,EAAE;MACjB,MAAM,IAAIG,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,MAAMC,UAA0B,GAAG;MACjC,GAAGJ,YAAY;MACfK,UAAU,EAAE,CAACL,YAAY,CAACK;IAC5B,CAAC;IAEDR,QAAQ,CACND,KAAK,CAACU,GAAG,CAAEJ,IAAI,IAAK;MAClB,OAAOA,IAAI,CAACA,IAAI,KAAKF,YAAY,CAACE,IAAI,GAAGE,UAAU,GAAGF,IAAI;IAC5D,CAAC,CACH,CAAC;EACH,CAAC;EAED,oBACEZ,OAAA,CAACC,gBAAgB,CAACgB,QAAQ;IACxBC,KAAK,EAAE;MACLZ,KAAK;MACLC,QAAQ;MACRY;IACF,CAAE;IAAAhB,QAAA,EAEDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAAClB,EAAA,CAtCWH,wBAAwB;AAAAsB,EAAA,GAAxBtB,wBAAwB;AAwCrC,OAAO,MAAMuB,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACvC,MAAMC,OAAO,GAAG9B,UAAU,CAACI,gBAAgB,CAAC;EAE5C,IAAI,CAAC0B,OAAO,EAAE;IACZ,MAAM,IAAId,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,OAAOc,OAAO;AAChB,CAAC;AAACD,GAAA,CARWD,mBAAmB;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}