{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/ui/Button/index.tsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { animated, useSpring } from \"@react-spring/web\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButton = styled(animated.button)`\n  margin: 1rem;\n  padding: 1rem;\n  color: #ff0000;\n  font-weight: 600;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n  background-color: ${props => props.$isMouseDown ? \"#c5c57e\" : \"#ffff00\"};\n  border: 1px solid #cfcf00;\n  border-radius: 0.5rem;\n`;\n_c = StyledButton;\nexport const Button = ({\n  action,\n  children,\n  ...restProps\n}) => {\n  _s();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [buttonPosition, setButtonPosition] = useState(0);\n  const [springs, api] = useSpring(() => ({\n    from: {\n      x: buttonPosition\n    }\n  }));\n\n  // use this for toggles if needed! cool trick\n  // could also be added (prolly should) to the useSpring config!\n  const handleButtonMove = () => {\n    const newButtonPosition = buttonPosition === 0 ? 100 : 0;\n    api.start({\n      from: {\n        x: buttonPosition,\n        loop: true\n      },\n      to: {\n        x: newButtonPosition\n      }\n    });\n    setButtonPosition(newButtonPosition);\n  };\n  const handleMouseUp = () => {\n    handleButtonMove();\n    setIsMouseDown(false);\n    action && action();\n  };\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    $isMouseDown: isMouseDown,\n    onMouseDown: () => setIsMouseDown(true),\n    onMouseUp: handleMouseUp,\n    style: {\n      ...springs\n    },\n    ...restProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Button, \"bibhmYQbdlRrNp2189scGNpy/u0=\", false, function () {\n  return [useSpring];\n});\n_c2 = Button;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["styled","useState","animated","useSpring","jsxDEV","_jsxDEV","StyledButton","button","props","$isMouseDown","_c","Button","action","children","restProps","_s","isMouseDown","setIsMouseDown","buttonPosition","setButtonPosition","springs","api","from","x","handleButtonMove","newButtonPosition","start","loop","to","handleMouseUp","onMouseDown","onMouseUp","style","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/ui/Button/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { IBaseProps } from \"../types\";\nimport { FC, useState } from \"react\";\nimport { animated, useSpring } from \"@react-spring/web\";\n\ninterface IProps extends IBaseProps {\n  action?: () => void;\n}\n\ninterface IStyledButtonProps {\n  $isMouseDown: boolean;\n}\n\nconst StyledButton = styled(animated.button)<IStyledButtonProps>`\n  margin: 1rem;\n  padding: 1rem;\n  color: #ff0000;\n  font-weight: 600;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n  background-color: ${(props) => (props.$isMouseDown ? \"#c5c57e\" : \"#ffff00\")};\n  border: 1px solid #cfcf00;\n  border-radius: 0.5rem;\n`;\n\nexport const Button: FC<IProps> = ({ action, children, ...restProps }) => {\n  const [isMouseDown, setIsMouseDown] = useState(false);\n\n  const [buttonPosition, setButtonPosition] = useState(0);\n\n  const [springs, api] = useSpring(() => ({\n    from: { x: buttonPosition },\n  }));\n\n  // use this for toggles if needed! cool trick\n  // could also be added (prolly should) to the useSpring config!\n  const handleButtonMove = () => {\n    const newButtonPosition = buttonPosition === 0 ? 100 : 0;\n    api.start({\n      from: {\n        x: buttonPosition,\n        loop: true,\n      },\n      to: {\n        x: newButtonPosition,\n      },\n    });\n    setButtonPosition(newButtonPosition);\n  };\n\n  const handleMouseUp = () => {\n    handleButtonMove();\n    setIsMouseDown(false);\n    action && action();\n  };\n  return (\n    <StyledButton\n      $isMouseDown={isMouseDown}\n      onMouseDown={() => setIsMouseDown(true)}\n      onMouseUp={handleMouseUp}\n      style={{\n        ...springs,\n      }}\n      {...restProps}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAEtC,SAAaC,QAAQ,QAAQ,OAAO;AACpC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUxD,MAAMC,YAAY,GAAGN,MAAM,CAACE,QAAQ,CAACK,MAAM,CAAsB;AACjE;AACA;AACA;AACA;AACA;AACA,sBAAuBC,KAAK,IAAMA,KAAK,CAACC,YAAY,GAAG,SAAS,GAAG,SAAW;AAC9E;AACA;AACA,CAAC;AAACC,EAAA,GATIJ,YAAY;AAWlB,OAAO,MAAMK,MAAkB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAE,GAAGC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAM,CAACmB,OAAO,EAAEC,GAAG,CAAC,GAAGlB,SAAS,CAAC,OAAO;IACtCmB,IAAI,EAAE;MAAEC,CAAC,EAAEL;IAAe;EAC5B,CAAC,CAAC,CAAC;;EAEH;EACA;EACA,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,iBAAiB,GAAGP,cAAc,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;IACxDG,GAAG,CAACK,KAAK,CAAC;MACRJ,IAAI,EAAE;QACJC,CAAC,EAAEL,cAAc;QACjBS,IAAI,EAAE;MACR,CAAC;MACDC,EAAE,EAAE;QACFL,CAAC,EAAEE;MACL;IACF,CAAC,CAAC;IACFN,iBAAiB,CAACM,iBAAiB,CAAC;EACtC,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1BL,gBAAgB,CAAC,CAAC;IAClBP,cAAc,CAAC,KAAK,CAAC;IACrBL,MAAM,IAAIA,MAAM,CAAC,CAAC;EACpB,CAAC;EACD,oBACEP,OAAA,CAACC,YAAY;IACXG,YAAY,EAAEO,WAAY;IAC1Bc,WAAW,EAAEA,CAAA,KAAMb,cAAc,CAAC,IAAI,CAAE;IACxCc,SAAS,EAAEF,aAAc;IACzBG,KAAK,EAAE;MACL,GAAGZ;IACL,CAAE;IAAA,GACEN,SAAS;IAAAD,QAAA,EAEZA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEnB,CAAC;AAACrB,EAAA,CA3CWJ,MAAkB;EAAA,QAKNR,SAAS;AAAA;AAAAkC,GAAA,GALrB1B,MAAkB;AAAA,IAAAD,EAAA,EAAA2B,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}