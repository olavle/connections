{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\n\n// rename\n// type TGameBoardContext = string;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameBoardContext = /*#__PURE__*/createContext(null);\nexport const GameBoardContextProvider = ({\n  children\n}) => {\n  _s();\n  const [words, setWords] = useState([]);\n  const updateWords = newWords => setWords(newWords);\n  return /*#__PURE__*/_jsxDEV(GameBoardContext.Provider, {\n    value: {\n      words,\n      updateWords\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoardContextProvider, \"1ZJhU64pVeNwwL/6UGtfvs/W4TE=\");\n_c = GameBoardContextProvider;\nvar _c;\n$RefreshReg$(_c, \"GameBoardContextProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","GameBoardContext","GameBoardContextProvider","children","_s","words","setWords","updateWords","newWords","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx"],"sourcesContent":["import { FC, ReactNode, createContext, useState } from \"react\";\nimport { IGameBoardWord } from \"../types\";\n\ntype IGameBoardWords = IGameBoardWord[];\n\nexport interface IGameBoardContext {\n  words: IGameBoardWords;\n  updateWords: (words: IGameBoardWords) => void;\n}\n\n// rename\n// type TGameBoardContext = string;\ntype TGameBoardContext = IGameBoardContext | null;\n\nexport const GameBoardContext = createContext<TGameBoardContext>(null);\n\nexport const GameBoardContextProvider: FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [words, setWords] = useState<IGameBoardWords>([]);\n\n  const updateWords = (newWords: IGameBoardWords) => setWords(newWords);\n\n  return (\n    <GameBoardContext.Provider value={{ words, updateWords }}>\n      {children}\n    </GameBoardContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAAwBA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAU9D;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,OAAO,MAAMC,gBAAgB,gBAAGJ,aAAa,CAAoB,IAAI,CAAC;AAEtE,OAAO,MAAMK,wBAAqD,GAAGA,CAAC;EACpEC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAkB,EAAE,CAAC;EAEvD,MAAMS,WAAW,GAAIC,QAAyB,IAAKF,QAAQ,CAACE,QAAQ,CAAC;EAErE,oBACER,OAAA,CAACC,gBAAgB,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,KAAK;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EACtDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACV,EAAA,CAZWF,wBAAqD;AAAAa,EAAA,GAArDb,wBAAqD;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}