{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/BoardLine/index.tsx\";\nimport styled from \"styled-components\";\nimport { BoardWord } from \"../BoardWord\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledBoardLine = styled.div`\n  display: grid;\n  grid-column: ${props => props.$gridColumn};\n`;\n_c = StyledBoardLine;\nexport const BoardLine = ({\n  words,\n  gridColumn\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledBoardLine, {\n      $gridColumn: gridColumn,\n      children: words.map((word, i) => /*#__PURE__*/_jsxDEV(BoardWord, {\n        boardWord: word,\n        gridRow: i\n      }, word.word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = BoardLine;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledBoardLine\");\n$RefreshReg$(_c2, \"BoardLine\");","map":{"version":3,"names":["styled","BoardWord","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledBoardLine","div","props","$gridColumn","_c","BoardLine","words","gridColumn","children","map","word","i","boardWord","gridRow","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/BoardLine/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { IGameBoardWord } from \"../types\";\nimport { FC, useContext } from \"react\";\nimport { BoardWord } from \"../BoardWord\";\n\ninterface IProps {\n  words: IGameBoardWord[];\n  gridColumn?: number;\n}\n\nconst StyledBoardLine = styled.div<{ $gridColumn?: number }>`\n  display: grid;\n  grid-column: ${(props) => props.$gridColumn};\n`;\n\nexport const BoardLine: FC<IProps> = ({ words, gridColumn }) => {\n  return (\n    <>\n      <StyledBoardLine $gridColumn={gridColumn}>\n        {words.map((word, i) => (\n          <BoardWord key={word.word} boardWord={word} gridRow={i} />\n        ))}\n      </StyledBoardLine>\n    </>\n  );\n};\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAGtC,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAOzC,MAAMC,eAAe,GAAGN,MAAM,CAACO,GAA8B;AAC7D;AACA,iBAAkBC,KAAK,IAAKA,KAAK,CAACC,WAAY;AAC9C,CAAC;AAACC,EAAA,GAHIJ,eAAe;AAKrB,OAAO,MAAMK,SAAqB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EAC9D,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA,CAACG,eAAe;MAACG,WAAW,EAAEI,UAAW;MAAAC,QAAA,EACtCF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACjBd,OAAA,CAACF,SAAS;QAAiBiB,SAAS,EAAEF,IAAK;QAACG,OAAO,EAAEF;MAAE,GAAvCD,IAAI,CAACA,IAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgC,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC,gBAClB,CAAC;AAEP,CAAC;AAACC,GAAA,GAVWb,SAAqB;AAAA,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}