{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameBoardContext = /*#__PURE__*/createContext(null);\nexport const GameBoardContextProvider = ({\n  children\n}) => {\n  _s();\n  const [words, setWords] = useState([]);\n  return /*#__PURE__*/_jsxDEV(GameBoardContext.Provider, {\n    value: {\n      words,\n      setWords\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoardContextProvider, \"1ZJhU64pVeNwwL/6UGtfvs/W4TE=\");\n_c = GameBoardContextProvider;\nexport const useGameBoardContext = () => {\n  _s2();\n  const context = useContext(GameBoardContext);\n  if (!context) {\n    throw new Error(\"context needs provider\");\n  }\n  return context;\n};\n_s2(useGameBoardContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameBoardContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","GameBoardContext","GameBoardContextProvider","children","_s","words","setWords","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGameBoardContext","_s2","context","Error","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx"],"sourcesContent":["import { ReactNode, createContext, useContext, useState } from \"react\";\nimport { IGameBoardWord } from \"../types\";\n\ninterface IContext {\n  words: IGameBoardWord[];\n  setWords: React.Dispatch<React.SetStateAction<IGameBoardWord[]>>;\n}\n\nexport const GameBoardContext = createContext<IContext | null>(null);\n\nexport const GameBoardContextProvider = ({\n  children,\n}: {\n  children: ReactNode;\n}) => {\n  const [words, setWords] = useState<IGameBoardWord[]>([]);\n\n  return (\n    <GameBoardContext.Provider\n      value={{\n        words,\n        setWords,\n      }}\n    >\n      {children}\n    </GameBoardContext.Provider>\n  );\n};\n\nexport const useGameBoardContext = () => {\n  const context = useContext(GameBoardContext);\n\n  if (!context) {\n    throw new Error(\"context needs provider\");\n  }\n\n  return context;\n};\n"],"mappings":";;;AAAA,SAAoBA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQvE,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAkB,IAAI,CAAC;AAEpE,OAAO,MAAMM,wBAAwB,GAAGA,CAAC;EACvCC;AAGF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAmB,EAAE,CAAC;EAExD,oBACEE,OAAA,CAACC,gBAAgB,CAACM,QAAQ;IACxBC,KAAK,EAAE;MACLH,KAAK;MACLC;IACF,CAAE;IAAAH,QAAA,EAEDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACR,EAAA,CAjBWF,wBAAwB;AAAAW,EAAA,GAAxBX,wBAAwB;AAmBrC,OAAO,MAAMY,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACvC,MAAMC,OAAO,GAAGnB,UAAU,CAACI,gBAAgB,CAAC;EAE5C,IAAI,CAACe,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EAEA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CARWD,mBAAmB;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}