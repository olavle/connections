{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/GameBoard/index.tsx\";\nimport * as R from \"ramda\";\nimport { BoardLine } from \"../BoardLine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GameBoard = ({\n  boardWords\n}) => {\n  const boardLines = R.splitEvery(4, boardWords);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: boardLines.map(line => /*#__PURE__*/_jsxDEV(BoardLine, {\n      words: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["R","BoardLine","jsxDEV","_jsxDEV","Fragment","_Fragment","GameBoard","boardWords","boardLines","splitEvery","children","map","line","words","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/GameBoard/index.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport { IGameBoardWord } from \"../types\";\nimport { BoardWord } from \"../BoardWord\";\nimport * as R from \"ramda\";\nimport { BoardLine } from \"../BoardLine\";\n\ninterface IProps {\n  boardWords: IGameBoardWord[];\n}\n\nexport const GameBoard: FC<IProps> = ({ boardWords }) => {\n  const boardLines = R.splitEvery(4, boardWords);\n\n  return (\n    <>\n      {boardLines.map((line) => (\n        <BoardLine words={line} />\n      ))}\n    </>\n  );\n};\n"],"mappings":";AAGA,OAAO,KAAKA,CAAC,MAAM,OAAO;AAC1B,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMzC,OAAO,MAAMC,SAAqB,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EACvD,MAAMC,UAAU,GAAGR,CAAC,CAACS,UAAU,CAAC,CAAC,EAAEF,UAAU,CAAC;EAE9C,oBACEJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACGF,UAAU,CAACG,GAAG,CAAEC,IAAI,iBACnBT,OAAA,CAACF,SAAS;MAACY,KAAK,EAAED;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1B;EAAC,gBACF,CAAC;AAEP,CAAC;AAACC,EAAA,GAVWZ,SAAqB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}