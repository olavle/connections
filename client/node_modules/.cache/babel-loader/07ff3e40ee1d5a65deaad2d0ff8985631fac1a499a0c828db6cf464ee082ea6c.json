{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst MIN_WIDTH = 1080;\nexport const useGetWindowWidth = () => {\n  _s();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  const isMobile = windowWidth < MIN_WIDTH;\n  return {\n    windowWidth,\n    isMobile\n  };\n};\n_s(useGetWindowWidth, \"XPjwYFA2mnyOQTDQkTW889KQ99c=\");","map":{"version":3,"names":["useEffect","useState","MIN_WIDTH","useGetWindowWidth","_s","windowWidth","setWindowWidth","window","innerWidth","handleResize","addEventListener","removeEventListener","isMobile"],"sources":["/home/eetu/projects/connections/client/src/hooks/useGetWindowWidth.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst MIN_WIDTH = 1080;\n\nexport const useGetWindowWidth = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  const isMobile = windowWidth < MIN_WIDTH;\n\n  return {\n    windowWidth,\n    isMobile,\n  };\n};\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,SAAS,GAAG,IAAI;AAEtB,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAACM,MAAM,CAACC,UAAU,CAAC;EAEjER,SAAS,CAAC,MAAM;IACd,MAAMS,YAAY,GAAGA,CAAA,KAAM;MACzBH,cAAc,CAACC,MAAM,CAACC,UAAU,CAAC;IACnC,CAAC;IACDD,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAC/CA,YAAY,CAAC,CAAC;IACd,OAAO,MAAMF,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,QAAQ,GAAGP,WAAW,GAAGH,SAAS;EAExC,OAAO;IACLG,WAAW;IACXO;EACF,CAAC;AACH,CAAC;AAACR,EAAA,CAlBWD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}