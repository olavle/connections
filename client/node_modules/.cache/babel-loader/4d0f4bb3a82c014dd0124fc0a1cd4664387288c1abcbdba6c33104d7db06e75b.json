{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameBoardContext = /*#__PURE__*/createContext(null);\nexport const GameBoardContextProvider = ({\n  children\n}) => {\n  _s();\n  const [words, setWords] = useState([]);\n  const updateWords = newWords => setWords(newWords);\n  const value = useMemo(() => ({\n    words,\n    updateWords\n  }), [words]);\n  return /*#__PURE__*/_jsxDEV(GameBoardContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(GameBoardContextProvider, \"gbHfXvJM0reFdXaQHWiSADeLTOs=\");\n_c = GameBoardContextProvider;\nexport const useGameBoardContext = () => {};\nvar _c;\n$RefreshReg$(_c, \"GameBoardContextProvider\");","map":{"version":3,"names":["createContext","useMemo","useState","jsxDEV","_jsxDEV","GameBoardContext","GameBoardContextProvider","children","_s","words","setWords","updateWords","newWords","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGameBoardContext","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx"],"sourcesContent":["import { FC, ReactNode, createContext, useMemo, useState } from \"react\";\nimport { IGameBoardWord } from \"../types\";\n\ntype IGameBoardWords = IGameBoardWord[];\n\nexport interface IGameBoardContext {\n  words: IGameBoardWords;\n  updateWords: (words: IGameBoardWords) => void;\n}\n\ntype TGameBoardContext = IGameBoardContext | null;\n\nexport const GameBoardContext = createContext<TGameBoardContext>(null);\n\nexport const GameBoardContextProvider: FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [words, setWords] = useState<IGameBoardWords>([]);\n\n  const updateWords = (newWords: IGameBoardWords) => setWords(newWords);\n\n  const value = useMemo(() => ({ words, updateWords }), [words]);\n\n  return (\n    <GameBoardContext.Provider value={value}>\n      {children}\n    </GameBoardContext.Provider>\n  );\n};\n\nexport const useGameBoardContext = () => {};\n"],"mappings":";;AAAA,SAAwBA,aAAa,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYxE,OAAO,MAAMC,gBAAgB,gBAAGL,aAAa,CAAoB,IAAI,CAAC;AAEtE,OAAO,MAAMM,wBAAqD,GAAGA,CAAC;EACpEC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAkB,EAAE,CAAC;EAEvD,MAAMS,WAAW,GAAIC,QAAyB,IAAKF,QAAQ,CAACE,QAAQ,CAAC;EAErE,MAAMC,KAAK,GAAGZ,OAAO,CAAC,OAAO;IAAEQ,KAAK;IAAEE;EAAY,CAAC,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EAE9D,oBACEL,OAAA,CAACC,gBAAgB,CAACS,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAN,QAAA,EACrCA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACV,EAAA,CAdWF,wBAAqD;AAAAa,EAAA,GAArDb,wBAAqD;AAgBlE,OAAO,MAAMc,mBAAmB,GAAGA,CAAA,KAAM,CAAC,CAAC;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}