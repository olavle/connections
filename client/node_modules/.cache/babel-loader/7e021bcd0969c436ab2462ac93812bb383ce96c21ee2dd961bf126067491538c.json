{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/GameBoard/index.tsx\";\nimport { BoardWord } from \"../BoardWord\";\nimport R from \"ramda\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GameBoard = ({\n  boardWords\n}) => {\n  const lines = R.splitEvery(4, boardWords);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: boardWords.map(word => /*#__PURE__*/_jsxDEV(BoardWord, {\n      boardWord: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c = GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["BoardWord","R","jsxDEV","_jsxDEV","Fragment","_Fragment","GameBoard","boardWords","lines","splitEvery","children","map","word","boardWord","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/GameBoard/index.tsx"],"sourcesContent":["import { FC } from \"react\";\nimport { IGameBoardWord } from \"../types\";\nimport { BoardWord } from \"../BoardWord\";\nimport R from \"ramda\";\n\ninterface IProps {\n  boardWords: IGameBoardWord[];\n}\n\nexport const GameBoard: FC<IProps> = ({ boardWords }) => {\n  const lines = R.splitEvery(4, boardWords);\n\n  return (\n    <>\n      {boardWords.map((word) => (\n        <BoardWord boardWord={word} />\n      ))}\n    </>\n  );\n};\n"],"mappings":";AAEA,SAASA,SAAS,QAAQ,cAAc;AACxC,OAAOC,CAAC,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAMtB,OAAO,MAAMC,SAAqB,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EACvD,MAAMC,KAAK,GAAGP,CAAC,CAACQ,UAAU,CAAC,CAAC,EAAEF,UAAU,CAAC;EAEzC,oBACEJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACGH,UAAU,CAACI,GAAG,CAAEC,IAAI,iBACnBT,OAAA,CAACH,SAAS;MAACa,SAAS,EAAED;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC9B;EAAC,gBACF,CAAC;AAEP,CAAC;AAACC,EAAA,GAVWZ,SAAqB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}