{"ast":null,"code":"var _jsxFileName = \"/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useMemo, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useGameBoardContext = (initialWords = []) => {\n  _s();\n  const [words, setWords] = useState(initialWords);\n  return {\n    words,\n    setWords\n  };\n};\n_s(useGameBoardContext, \"f8H8f5QYXV/AZTi5JwdoXjKPpHY=\");\nexport const GameBoardContext = /*#__PURE__*/createContext(null);\nexport const GameBoardContextProvider = ({\n  children\n}) => {\n  _s2();\n  const [words, setWords] = useState([]);\n  const updateWords = newWords => setWords(newWords);\n  const value = useMemo(() => ({\n    words,\n    updateWords\n  }), [words]);\n  return /*#__PURE__*/_jsxDEV(GameBoardContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s2(GameBoardContextProvider, \"gbHfXvJM0reFdXaQHWiSADeLTOs=\");\n_c = GameBoardContextProvider;\nvar _c;\n$RefreshReg$(_c, \"GameBoardContextProvider\");","map":{"version":3,"names":["createContext","useMemo","useState","jsxDEV","_jsxDEV","useGameBoardContext","initialWords","_s","words","setWords","GameBoardContext","GameBoardContextProvider","children","_s2","updateWords","newWords","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/eetu/projects/connections/client/src/components/Game/GameBoardContext/index.tsx"],"sourcesContent":["import { FC, ReactNode, createContext, useMemo, useState } from \"react\";\nimport { IGameBoardWord } from \"../types\";\n\ntype IGameBoardWords = IGameBoardWord[];\n\nexport interface IGameBoardContext {\n  words: IGameBoardWords;\n  updateWords: (words: IGameBoardWords) => void;\n}\n\ntype TGameBoardContext = IGameBoardContext | null;\n\nconst useGameBoardContext = (initialWords: IGameBoardWords = []) => {\n  const [words, setWords] = useState<IGameBoardWords>(initialWords);\n\n  return {\n    words,\n    setWords,\n  };\n};\n\ntype TUseGameBoardContext = ReturnType<typeof useGameBoardContext> | null;\n\nexport const GameBoardContext = createContext<TUseGameBoardContext>(null);\n\nexport const GameBoardContextProvider: FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [words, setWords] = useState<IGameBoardWords>([]);\n\n  const updateWords = (newWords: IGameBoardWords) => setWords(newWords);\n\n  const value = useMemo(() => ({ words, updateWords }), [words]);\n\n  return (\n    <GameBoardContext.Provider value={value}>\n      {children}\n    </GameBoardContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAAwBA,aAAa,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYxE,MAAMC,mBAAmB,GAAGA,CAACC,YAA6B,GAAG,EAAE,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAkBI,YAAY,CAAC;EAEjE,OAAO;IACLE,KAAK;IACLC;EACF,CAAC;AACH,CAAC;AAACF,EAAA,CAPIF,mBAAmB;AAWzB,OAAO,MAAMK,gBAAgB,gBAAGV,aAAa,CAAuB,IAAI,CAAC;AAEzE,OAAO,MAAMW,wBAAqD,GAAGA,CAAC;EACpEC;AACF,CAAC,KAAK;EAAAC,GAAA;EACJ,MAAM,CAACL,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAkB,EAAE,CAAC;EAEvD,MAAMY,WAAW,GAAIC,QAAyB,IAAKN,QAAQ,CAACM,QAAQ,CAAC;EAErE,MAAMC,KAAK,GAAGf,OAAO,CAAC,OAAO;IAAEO,KAAK;IAAEM;EAAY,CAAC,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAE9D,oBACEJ,OAAA,CAACM,gBAAgB,CAACO,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAJ,QAAA,EACrCA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACR,GAAA,CAdWF,wBAAqD;AAAAW,EAAA,GAArDX,wBAAqD;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}